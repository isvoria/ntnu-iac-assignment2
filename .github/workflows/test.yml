name: 'Terraform test and validate'

on:
  workflow_call:
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_CLIENT_SECRET:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_TENANT_ID:
        required: true

jobs:
  terraform_test:
    name: 'Terraform test and validate'
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v3

      - name: 'Set up Terraform'
        uses: hashicorp/setup-terraform@v2

      # this is needed because i do not have a custom docker image yet, and the docker image i use dont have az but github actions does
      - name: 'Check and install Azure CLI'
        run: |
          if ! command -v az &> /dev/null; then
            echo "Azure CLI not found, installing..."
            curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          else
            echo "Azure CLI is already installed."
          fi

      - name: 'Verify Azure CLI installation'
        run: az --version

      - name: 'Azure login'
        run: az login --service-principal --username ${{ secrets.AZURE_CLIENT_ID }} --password=${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: 'Set Azure Subscription'
        run: az account set --subscription 3291a0d9-96b5-41ee-9b93-5b28b419919f

      - name: 'Terraform init'
        working-directory: ./deployments
        run: terraform init

      - name: 'Terraform Format Check'
        run: terraform fmt -check -recursive

      - name: 'Terraform Validate'
        working-directory: ./deployments
        run: terraform validate

      - name: 'Set up TFLint'
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: 'latest'

      - name: 'Run TFLint'
        working-directory: ./deployments
        run: tflint

      - name: 'Run tfsec'
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: ./deployments
          github_token: ${{ secrets.GITHUB_TOKEN }}